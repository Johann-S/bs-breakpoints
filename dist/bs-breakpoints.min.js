/*!
 * bsBreakpoints v1.1.1 (https://github.com/Johann-S/bs-breakpoints)
 * Copyright 2018 - 2021 Johann-S <johann.servoire@gmail.com>
 * Licensed under MIT (https://github.com/Johann-S/bs-breakpoints/blob/master/LICENSE)
 */
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(e="undefined"!=typeof globalThis?globalThis:e||self).bsBreakpoints=n()}(this,function(){"use strict";function e(e,n){var t=document.createEvent("CustomEvent");return n=n||{bubbles:!1,cancelable:!1,detail:void 0},t.initCustomEvent(e,n.bubbles,n.cancelable,n.detail),t}"function"!=typeof window.CustomEvent&&(e.prototype=window.Event.prototype,window.CustomEvent=e);function r(){return Array.from(document.styleSheets).filter(function(e){return null===e.href||e.href.startsWith(window.location.origin)}).reduce(function(e,n){return[].concat(e,Array.from(n.cssRules).reduce(function(e,n){return":root"===n.selectorText?[].concat(e,Array.from(n.style).filter(function(e){return e.startsWith("--breakpoint")})):e},[]))},[]).map(function(e){return{name:e.replace("--breakpoint-",""),value:parseInt(window.getComputedStyle(document.documentElement).getPropertyValue(e),10)}})}function n(){var e=r();if(e.length)for(var n in e){var t=u[e[n].name]||e[n].name,i=parseInt(n)+1;t in a||(a[t]={}),a[t].min=e[n].value,a[t].max=e[i]?e[i].value-1:1/0}else a=o;l=!0}function t(){var e,n=Math.max(document.documentElement.clientWidth,window.innerWidth||0);for(e in a)if(n<=a[e].max&&n>=a[e].min)return e;return m}function i(e,n){var t,i;void 0===n&&(n=d),m&&m===e||(m=e,(t=window.jQuery)?(i=t.Event(n,{breakpoint:e}),t(window).trigger(i)):(e=new window.CustomEvent(n,{detail:e}),window.dispatchEvent(e)))}var o={xSmall:{min:0,max:575},small:{min:576,max:767},medium:{min:768,max:991},large:{min:992,max:1199},xLarge:{min:1200,max:1/0}},a={},u={xs:"xSmall",sm:"small",md:"medium",lg:"large",xl:"xLarge"},l=!1,m=null,c="init.bs.breakpoint",d="new.bs.breakpoint";return{init:function(){n(),i(t(),c),window.addEventListener("resize",function(){i(t())})},detectBreakpoint:function(){return l||n(),m=t()},getCurrentBreakpoint:function(){return m}}});
//# sourceMappingURL=bs-breakpoints.min.js.map
