{"version":3,"file":"bs-breakpoints.min.js","sources":["../src/polyfill.js","../src/index.js"],"sourcesContent":["(() => {\r\n  // Add polyfill for Custom Events\r\n  function CustomEvent (ev, params) {\r\n    const evt = document.createEvent('CustomEvent')\r\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\r\n    evt.initCustomEvent(ev, params.bubbles, params.cancelable, params.detail)\r\n    return evt\r\n  }\r\n\r\n  if (typeof window.CustomEvent !== 'function') {\r\n    CustomEvent.prototype = window.Event.prototype\r\n    window.CustomEvent = CustomEvent\r\n  }\r\n})()\r\n","import './polyfill'\r\n\r\nconst breakPoints = {\r\n  xSmall: {\r\n    min: 0,\r\n    max: 575\r\n  },\r\n  small: {\r\n    min: 576,\r\n    max: 767\r\n  },\r\n  medium: {\r\n    min: 768,\r\n    max: 991\r\n  },\r\n  large: {\r\n    min: 992,\r\n    max: 1199\r\n  },\r\n  xLarge: {\r\n    min: 1200,\r\n    max: Infinity\r\n  }\r\n}\r\n\r\nlet currentBreakpoint = null\r\n\r\nconst Events = {\r\n  INIT: 'init.bs.breakpoint',\r\n  NEW: 'new.bs.breakpoint'\r\n}\r\n\r\nconst getJQuery = () => window.$ || window.jQuery\r\n\r\nconst detectBreakPoint = () => {\r\n  const widthWindow = Math.max(document.documentElement.clientWidth, window.innerWidth || 0)\r\n\r\n  for (const key in breakPoints) {\r\n    if (widthWindow < breakPoints[key].max && widthWindow >= breakPoints[key].min) {\r\n      return key\r\n    }\r\n  }\r\n\r\n  return currentBreakpoint\r\n}\r\n\r\nconst dispatchBreakpoint = (breakPointKey, eventName = Events.NEW) => {\r\n  if (currentBreakpoint === null || currentBreakpoint !== breakPointKey) {\r\n    currentBreakpoint = breakPointKey\r\n    const $ = getJQuery()\r\n\r\n    if ($) {\r\n      const $event = $.Event(eventName, {\r\n        breakpoint: breakPointKey\r\n      })\r\n\r\n      $(window).trigger($event)\r\n    } else {\r\n      const event = new window.CustomEvent(eventName, {\r\n        detail: breakPointKey\r\n      })\r\n\r\n      window.dispatchEvent(event)\r\n    }\r\n  }\r\n}\r\n\r\nconst bsBreakpoints = {\r\n  init () {\r\n    dispatchBreakpoint(detectBreakPoint(), Events.INIT)\r\n\r\n    window.addEventListener('resize', () => {\r\n      dispatchBreakpoint(detectBreakPoint())\r\n    })\r\n  },\r\n\r\n  getCurrentBreakPoint () {\r\n    return currentBreakpoint\r\n  }\r\n}\r\n\r\nexport default bsBreakpoints\r\n"],"names":["CustomEvent","ev","params","evt","document","createEvent","bubbles","cancelable","detail","undefined","initCustomEvent","window","prototype","Event","breakPoints","xSmall","min","max","small","medium","large","xLarge","Infinity","currentBreakpoint","Events","detectBreakPoint","widthWindow","Math","documentElement","clientWidth","innerWidth","key","dispatchBreakpoint","breakPointKey","eventName","$","jQuery","$event","breakpoint","trigger","event","dispatchEvent","init","addEventListener","getCurrentBreakPoint"],"mappings":";;;;;0LAAA,oBAEWA,EAAaC,EAAIC,OAClBC,EAAMC,SAASC,YAAY,sBACjCH,EAASA,GAAU,CAAEI,SAAS,EAAOC,YAAY,EAAOC,YAAQC,GAChEN,EAAIO,gBAAgBT,EAAIC,EAAOI,QAASJ,EAAOK,WAAYL,EAAOM,QAC3DL,EAGyB,mBAAvBQ,OAAOX,cAChBA,EAAYY,UAAYD,OAAOE,MAAMD,UACrCD,OAAOX,YAAcA,GAXzB,OCEMc,EAAc,CAClBC,OAAQ,CACNC,IAAK,EACLC,IAAK,KAEPC,MAAO,CACLF,IAAK,IACLC,IAAK,KAEPE,OAAQ,CACNH,IAAK,IACLC,IAAK,KAEPG,MAAO,CACLJ,IAAK,IACLC,IAAK,MAEPI,OAAQ,CACNL,IAAK,KACLC,IAAKK,EAAAA,IAILC,EAAoB,KAElBC,EACE,qBADFA,EAEC,oBAKDC,EAAmB,eACjBC,EAAcC,KAAKV,IAAIb,SAASwB,gBAAgBC,YAAalB,OAAOmB,YAAc,OAEnF,IAAMC,KAAOjB,KACZY,EAAcZ,EAAYiB,GAAKd,KAAOS,GAAeZ,EAAYiB,GAAKf,WACjEe,SAIJR,GAGHS,EAAqB,SAACC,EAAeC,eAAAA,IAAAA,EAAYV,GAC3B,OAAtBD,GAA8BA,IAAsBU,EAAe,CACrEV,EAAoBU,MACdE,EAjBcxB,OAAOwB,GAAKxB,OAAOyB,UAmBnCD,EAAG,KACCE,EAASF,EAAEtB,MAAMqB,EAAW,CAChCI,WAAYL,IAGdE,EAAExB,QAAQ4B,QAAQF,OACb,KACCG,EAAQ,IAAI7B,OAAOX,YAAYkC,EAAW,CAC9C1B,OAAQyB,IAGVtB,OAAO8B,cAAcD,YAKL,CACpBE,gBACEV,EAAmBP,IAAoBD,GAEvCb,OAAOgC,iBAAiB,SAAU,WAChCX,EAAmBP,QAIvBmB,uCACSrB"}