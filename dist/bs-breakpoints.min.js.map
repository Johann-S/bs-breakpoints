{"version":3,"file":"bs-breakpoints.min.js","sources":["../src/polyfill.js","../src/index.js"],"sourcesContent":["(() => {\n  // Add polyfill for Custom Events\n  function CustomEvent (ev, params) {\n    const evt = document.createEvent('CustomEvent')\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\n    evt.initCustomEvent(ev, params.bubbles, params.cancelable, params.detail)\n    return evt\n  }\n\n  if (typeof window.CustomEvent !== 'function') {\n    CustomEvent.prototype = window.Event.prototype\n    window.CustomEvent = CustomEvent\n  }\n})()\n","import './polyfill'\n\nconst breakPoints = {\n  xSmall: {\n    min: 0,\n    max: 575\n  },\n  small: {\n    min: 576,\n    max: 767\n  },\n  medium: {\n    min: 768,\n    max: 991\n  },\n  large: {\n    min: 992,\n    max: 1199\n  },\n  xLarge: {\n    min: 1200,\n    max: Infinity\n  }\n}\n\nlet breakPointsDetected = false\nlet currentBreakpoint = null\n\nconst Events = {\n  INIT: 'init.bs.breakpoint',\n  NEW: 'new.bs.breakpoint'\n}\n\nconst getJQuery = () => window.$ || window.jQuery\n\nconst getBreakPoints = () => {\n  const minSmall = parseInt(window.getComputedStyle(document.documentElement).getPropertyValue('--breakpoint-sm'), 10)\n  const minMedium = parseInt(window.getComputedStyle(document.documentElement).getPropertyValue('--breakpoint-md'), 10)\n  const minLarge = parseInt(window.getComputedStyle(document.documentElement).getPropertyValue('--breakpoint-lg'), 10)\n  const minXlarge = parseInt(window.getComputedStyle(document.documentElement).getPropertyValue('--breakpoint-xl'), 10)\n\n  // update xSmall\n  breakPoints.xSmall.max = minSmall - 1\n\n  // update small\n  breakPoints.small.min = minSmall\n  breakPoints.small.max = minMedium - 1\n\n  // update medium\n  breakPoints.medium.min = minMedium\n  breakPoints.medium.max = minLarge - 1\n\n  // update large\n  breakPoints.large.min = minLarge\n  breakPoints.large.max = minXlarge - 1\n\n  // update XL\n  breakPoints.xLarge.min = minXlarge\n\n  breakPointsDetected = true\n}\n\nconst _detectBreakPoint = () => {\n  const widthWindow = Math.max(document.documentElement.clientWidth, window.innerWidth || 0)\n\n  for (const key in breakPoints) {\n    if (widthWindow < breakPoints[key].max && widthWindow >= breakPoints[key].min) {\n      return key\n    }\n  }\n\n  return currentBreakpoint\n}\n\nconst dispatchBreakpoint = (breakPointKey, eventName = Events.NEW) => {\n  if (currentBreakpoint === null || currentBreakpoint !== breakPointKey) {\n    currentBreakpoint = breakPointKey\n    const $ = getJQuery()\n\n    if ($) {\n      const $event = $.Event(eventName, {\n        breakpoint: breakPointKey\n      })\n\n      $(window).trigger($event)\n    } else {\n      const event = new window.CustomEvent(eventName, {\n        detail: breakPointKey\n      })\n\n      window.dispatchEvent(event)\n    }\n  }\n}\n\nconst bsBreakpoints = {\n  init () {\n    getBreakPoints()\n    dispatchBreakpoint(_detectBreakPoint(), Events.INIT)\n\n    window.addEventListener('resize', () => {\n      dispatchBreakpoint(_detectBreakPoint())\n    })\n  },\n\n  detectBreakpoint () {\n    if (!breakPointsDetected) {\n      getBreakPoints()\n    }\n\n    currentBreakpoint = _detectBreakPoint()\n    return currentBreakpoint\n  },\n\n  getCurrentBreakpoint () {\n    return currentBreakpoint\n  }\n}\n\nexport default bsBreakpoints\n"],"names":["CustomEvent","ev","params","evt","document","createEvent","bubbles","cancelable","detail","undefined","initCustomEvent","window","prototype","Event","breakPoints","xSmall","min","max","small","medium","large","xLarge","Infinity","breakPointsDetected","currentBreakpoint","Events","getBreakPoints","minSmall","parseInt","getComputedStyle","documentElement","getPropertyValue","minMedium","minLarge","minXlarge","_detectBreakPoint","widthWindow","Math","clientWidth","innerWidth","key","dispatchBreakpoint","breakPointKey","eventName","$","jQuery","$event","breakpoint","trigger","event","dispatchEvent","init","addEventListener","detectBreakpoint","getCurrentBreakpoint"],"mappings":";;;;;oMAAA,oBAEWA,EAAaC,EAAIC,OAClBC,EAAMC,SAASC,YAAY,sBACjCH,EAASA,GAAU,CAAEI,SAAS,EAAOC,YAAY,EAAOC,YAAQC,GAChEN,EAAIO,gBAAgBT,EAAIC,EAAOI,QAASJ,EAAOK,WAAYL,EAAOM,QAC3DL,EAGyB,mBAAvBQ,OAAOX,cAChBA,EAAYY,UAAYD,OAAOE,MAAMD,UACrCD,OAAOX,YAAcA,GAXzB,OCEMc,EAAc,CAClBC,OAAQ,CACNC,IAAK,EACLC,IAAK,KAEPC,MAAO,CACLF,IAAK,IACLC,IAAK,KAEPE,OAAQ,CACNH,IAAK,IACLC,IAAK,KAEPG,MAAO,CACLJ,IAAK,IACLC,IAAK,MAEPI,OAAQ,CACNL,IAAK,KACLC,IAAKK,EAAAA,IAILC,GAAsB,EACtBC,EAAoB,KAElBC,EACE,qBADFA,EAEC,oBAKDC,EAAiB,eACfC,EAAWC,SAASjB,OAAOkB,iBAAiBzB,SAAS0B,iBAAiBC,iBAAiB,mBAAoB,IAC3GC,EAAYJ,SAASjB,OAAOkB,iBAAiBzB,SAAS0B,iBAAiBC,iBAAiB,mBAAoB,IAC5GE,EAAWL,SAASjB,OAAOkB,iBAAiBzB,SAAS0B,iBAAiBC,iBAAiB,mBAAoB,IAC3GG,EAAYN,SAASjB,OAAOkB,iBAAiBzB,SAAS0B,iBAAiBC,iBAAiB,mBAAoB,IAGlHjB,EAAYC,OAAOE,IAAMU,EAAW,EAGpCb,EAAYI,MAAMF,IAAMW,EACxBb,EAAYI,MAAMD,IAAMe,EAAY,EAGpClB,EAAYK,OAAOH,IAAMgB,EACzBlB,EAAYK,OAAOF,IAAMgB,EAAW,EAGpCnB,EAAYM,MAAMJ,IAAMiB,EACxBnB,EAAYM,MAAMH,IAAMiB,EAAY,EAGpCpB,EAAYO,OAAOL,IAAMkB,EAEzBX,GAAsB,GAGlBY,EAAoB,eAClBC,EAAcC,KAAKpB,IAAIb,SAAS0B,gBAAgBQ,YAAa3B,OAAO4B,YAAc,OAEnF,IAAMC,KAAO1B,KACZsB,EAActB,EAAY0B,GAAKvB,KAAOmB,GAAetB,EAAY0B,GAAKxB,WACjEwB,SAIJhB,GAGHiB,EAAqB,SAACC,EAAeC,eAAAA,IAAAA,EAAYlB,GAC3B,OAAtBD,GAA8BA,IAAsBkB,EAAe,CACrElB,EAAoBkB,MACdE,EA5CcjC,OAAOiC,GAAKjC,OAAOkC,UA8CnCD,EAAG,KACCE,EAASF,EAAE/B,MAAM8B,EAAW,CAChCI,WAAYL,IAGdE,EAAEjC,QAAQqC,QAAQF,OACb,KACCG,EAAQ,IAAItC,OAAOX,YAAY2C,EAAW,CAC9CnC,OAAQkC,IAGV/B,OAAOuC,cAAcD,YAKL,CACpBE,gBACEzB,IACAe,EAAmBN,IAAqBV,GAExCd,OAAOyC,iBAAiB,SAAU,WAChCX,EAAmBN,QAIvBkB,mCACO9B,GACHG,IAGFF,EAAoBW,KAItBmB,uCACS9B"}